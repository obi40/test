
AbstractAccessDecisionManager.accessDenied = accessDenied

AbstractLdapAuthenticationProvider.emptyPassword = passwordEmpty

AbstractSecurityInterceptor.authenticationNotFound = authenticationNotFound

AbstractUserDetailsAuthenticationProvider.badCredentials     = credentialsInvalid
AbstractUserDetailsAuthenticationProvider.credentialsExpired = credentialsExpired
AbstractUserDetailsAuthenticationProvider.disabled           = userDisabled
AbstractUserDetailsAuthenticationProvider.expired            = userExpired
AbstractUserDetailsAuthenticationProvider.locked             = userLocked
AbstractUserDetailsAuthenticationProvider.onlySupports       = Only UsernamePasswordAuthenticationToken is supported

AccountStatusUserDetailsChecker.credentialsExpired = credentialsExpired
AccountStatusUserDetailsChecker.disabled           = userDisabled
AccountStatusUserDetailsChecker.expired            = userExpired
AccountStatusUserDetailsChecker.locked             = userLocked

AclEntryAfterInvocationProvider.noPermission = Authentication {0} has NO permissions to the domain object {1}

AnonymousAuthenticationProvider.incorrectKey = The presented AnonymousAuthenticationToken does not contain the expected key

BindAuthenticator.badCredentials = credentialsInvalid
BindAuthenticator.emptyPassword  = passwordEmpty

CasAuthenticationProvider.incorrectKey    = The presented CasAuthenticationToken does not contain the expected key
CasAuthenticationProvider.noServiceTicket = Failed to provide a CAS service ticket to validate

ConcurrentSessionControlAuthenticationStrategy.exceededAllowed = Maximum sessions of {0} for this principal exceeded

DigestAuthenticationFilter.incorrectRealm    = Response realm name {0} does not match system realm name of {1}
DigestAuthenticationFilter.incorrectResponse = responseIncorrect
DigestAuthenticationFilter.missingAuth       = Missing mandatory digest value for 'auth' QOP; received header {0}
DigestAuthenticationFilter.missingMandatory  = Missing mandatory digest value; received header {0}
DigestAuthenticationFilter.nonceCompromised  = Nonce token compromised {0}
DigestAuthenticationFilter.nonceEncoding     = Nonce is not encoded in Base64; received nonce {0}
DigestAuthenticationFilter.nonceExpired      = Nonce has expired/timed out
DigestAuthenticationFilter.nonceNotNumeric   = Nonce token should have yielded a numeric first token, but was {0}
DigestAuthenticationFilter.nonceNotTwoTokens = Nonce should have yielded two tokens but was {0}
DigestAuthenticationFilter.usernameNotFound  = usernameNotFound

JdbcDaoImpl.noAuthority = userNoAuthority
JdbcDaoImpl.notFound    = userNotFound

LdapAuthenticationProvider.badCredentials     = credentialsInvalid
LdapAuthenticationProvider.credentialsExpired = credentialsExpired
LdapAuthenticationProvider.disabled           = userDisabled
LdapAuthenticationProvider.emptyUsername      = usernameEmpty
LdapAuthenticationProvider.expired            = userExpired
LdapAuthenticationProvider.locked             = userLocked
LdapAuthenticationProvider.onlySupports       = Only UsernamePasswordAuthenticationToken is supported

PasswordComparisonAuthenticator.badCredentials = credentialsInvalid

PersistentTokenBasedRememberMeServices.cookieStolen = Invalid remember-me token (Series/token) mismatch. Implies previous cookie theft attack.

ProviderManager.providerNotFound = No AuthenticationProvider found for {0}

RememberMeAuthenticationProvider.incorrectKey = The presented RememberMeAuthenticationToken does not contain the expected key

RunAsImplAuthenticationProvider.incorrectKey = The presented RunAsUserToken does not contain the expected key

SubjectDnX509PrincipalExtractor.noMatching = No matching pattern was found in subjectDN: {0}

SwitchUserFilter.noCurrentUser            = noCurrentUser
SwitchUserFilter.noOriginalAuthentication = noOriginalAuthentication
